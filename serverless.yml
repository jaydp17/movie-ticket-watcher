service: movie-ticket-watcher
#app: your-app-name
#tenant: your-tenant-name

frameworkVersion: '>=1.28.0 <2.0.0'

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-south-1'}
  logRetentionInDays: 14
  deploymentBucket:
    name: movie-ticket-watcher-go-binaries
  apiGateway:
    minimumCompressionSize: 1024
  tracing:
    apiGateway: true
    lambda: true
  environment:
    APP_ENV: ${ssm:/MovieTicketWatcher/${self:provider.stage}/APP_ENV}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/ticket-watcher-staging.*"

package:
  individually: true
  excludeDevDependencies: false
  exclude:
    - ./**

functions:
  get-cities:
    handler: bin/get-cities
    events:
      - http:
          path: /cities
          method: get
    package:
      include:
        - ./bin/get-cities
  get-movies:
    handler: bin/get-movies
    events:
      - http:
          path: /movies/{regionCode}
          method: get
    package:
      include:
        - ./bin/get-movies
  get-cinemas:
    handler: bin/get-cinemas
    events:
      - http:
          path: /cinemas/{cityID}
          method: get
    package:
      include:
        - ./bin/get-cinemas

plugins:
  - serverless-pseudo-parameters